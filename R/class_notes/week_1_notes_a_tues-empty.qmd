---
title: "ETV Lesson 1: Extracting Data from Movie Ratings CSV File"
subtitle: "Using the readr Package"
format: html
editor: source
---

## Description

This task leverages the `movies_df` dataset—loaded from a CSV file—to introduce key concepts in data transformation and visualization using R. Students will engage in a series of subtasks that reinforce their understanding of data manipulation, filtering, and visualization. The subtasks emphasize the **ETV framework** (Extraction, Transformation, Visualization) to simulate real-world data analysis processes. These exercises highlight how to explore relationships between variables while encouraging critical thinking through interpretation of results.

**Background Info:**\
The data was extracted from a CSV file (`movies.csv`) containing information about movies: their user ratings, running length (in minutes), release year, and other attributes.

**Sub Task 1:** Create a histogram of movie **rating** (`IMDB_Rating`). Describe your findings.

**Sub Task 2:** Create a density plot of movie **rating** (`IMDB_Rating`). Add a better name to the x-axis and a better title. Describe your findings.\
**Sub Task 3:** Create a scatter plot of **rating** (`IMDB_Rating`) versus **Gross** (`Gross`). Add labels to the x and y axes as well as a title. Describe your findings.

**Sub Task 4:** Create a scatter plot of **rating** (`IMDB_Rating`) versus **Gross** (`Gross`). Filter the data to only include movies released in or after the **year** 2000 (`Released_Year >= 2000`). Describe your findings.

**Data Ethics:**\
This data is drawn from a publicly available movies CSV. Always verify the provenance and integrity of any external dataset before analysis.

------------------------------------------------------------------------

#### Learning Moment 1 – Packages and Libraries

**Packages** are collections of functions in R. We’ll use `readr` for data extraction, `dplyr` for transformation and `ggplot2` for visualization.

```{r}
## Fill in: load the readr, dplyr, and ggplot2 libraries
library(readr)    ## Data Extraction
library(dplyr)    ## Data Transformation
library(ggplot2)    ## Data Visualization
```

### Extraction

Q1. What is the definition of data extraction? - the process of retrieving revelant data from a source

```{r}
## Fill in: define file path and load CSV into movies_df
file_to_path <- here::here("Data","imdb_top_1000.csv")
movies_df <- read_csv(file_to_path)
```

------------------------------------------------------------------------

#### Learning Moment 2 – Tidy Data

Q2. What is the definition of tidy data? - a format where each variable forms a column, each observation forms a row and each type form a table

#### Learning Moment 3 – Data Types, Data Frame, and Viewing

Q3. What are three common data types in R?

-   \_\_\_\_(quantitative)
-   \_\_\_\_ (text or categorical)
-   \_\_\_\_ (TRUE/FALSE)

Q4. What is the definition of a data frame? - A two dimenstional table where each column is a variable and each row is an observation

Q5. How can we view the tidy data frame `movies_df`?

```{r}
# Fill in: command to view in spreadsheet-style viewer
View(movies_df)

# Fill in: command to see structure
str(movies_df)

# Fill in: command to preview first rows
head(movies_df)

# Fill in: alternative glimpse function
glimpse(movies_df)
```

------------------------------------------------------------------------

### Transformation

Q6. What is the definition of data transformation? - It is the capacity to maniplualate the data to eventually anaylyze or visulize

#### Learning Moment 4 – `select()`

```{r}
# Fill in: create a new df selecting IMDB_Rating
select_rating_df <- movies_df %>% 
  select(IMDB_Rating)
```

Q6a. Run `str(select_rating_df)`. How many variables are seen?

```{r}
# Fill in: run structure function
str(select_rating_df)
```

Q7. What is the definition of the `select()` function? - Extract columns from a data frame

#### Learning Moment 5 – `filter()`

```{r}
# Fill in: create a new df filtering Meta_score > 70
filter_long_movies_df <- movies_df %>% 
  filter(Meta_score > 70)
```

Q8. What is the definition of the `filter()` function? - Provide the ability to extract rows based on a condition

Q9. What are other operators usable with `filter()`?

-   `<`, `>`, `<=`, `>=`
-   `==`, `!=`
-   `%in%`

#### Learning Moment 6 – `mutate()`

```{r}
# Fill in: add a new variable Gross_x_10 multiplying Gross by 10
movies_hours_df <- movies_df %>% 
  mutate(gross_x10 = Gross * 10)
```

Q10. What is the definition of the `mutate()` function? - Allow us to create a new variable within the frame data

------------------------------------------------------------------------

### Visualization

Q11. What is the definition of data visualization? - Data visualization is the graphic reprensation of data to communicate information clearly efficient

#### Sub Task 1

*Create a histogram of **IMDB_Rating***

```{r}
# Fill in: histogram of IMDB_Rating
movies_df %>% 
  ggplot(aes(x = IMDB_Rating)) +
  geom_histogram(binwidth = 4)
```

*Note 1:* *Note 2:*

#### Sub Task 2

*Create a density plot of **IMDB_Rating** with custom labels.*

```{r}
# Fill in: density plot with title and axis label
p1 <- movies_df %>% 
  ggplot(aes(x = IMDB_Rating)) +
  geom_density() +
  labs(
    title = "Density of Movie Rating",
    x = "User rating out of 10"
  )
p1 + theme_bw() + theme(plot.title = element_text(hjust = 0.5))
```

*Note 3:* *Note 4:*

#### Sub Task 3

*Scatter plot of **IMDB_Rating** vs **Gross***

```{r}
# Fill in: scatter + trend line
movies_df %>% 
  ggplot(aes(x = IMBD_Rating, y = Gross)) +
  geom_point(size = 2) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    title = "Scatter PLot of User Rating and Gross",
    x = "Using Rating of 10",
    y = "Gross"
  ) +
  theme_bw() + theme(plot.title = element_text(hjust = 0.5))
```

*Note 5:* *Note 6:*

#### Sub Task 4

*Scatter plot of **IMDB_Rating** vs **Gross** for movies from 2000 onward*

```{r}
# Fill in: filter and scatter
movies_df %>% 
  filter(Released_Year >= 2000) %>% 
  ggplot(aes(x = _______, y = _______)) +
  geom_point() +
  labs(
    title = "________",
    x = "________",
    y = "________"
  ) +
  theme_minimal() + theme(plot.title = element_text(hjust = 0.5))
```

*Describe your findings:*

------------------------------------------------------------------------

## Recap

1.  **Extraction:** We loaded `movies_df` from a CSV file and inspected its structure.

2.  **Transformation (`dplyr`):** We selected, filtered, and mutated variables to prepare the data for visualization.

3.  **Visualization (`ggplot2`):** We created histograms, density plots, and scatter plots to explore relationships in the movie data.